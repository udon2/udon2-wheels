env:
    global:
        - REPO_DIR=udon2
        # Commit from your-project that you want to build
        - BUILD_COMMIT=v0.1b3
        # pip dependencies to _build_ your project
        - BUILD_DEPENDS="six svgling"
        # pip dependencies to _test_ your project.  Include any dependencies
        # that you need, that are also specified in BUILD_DEPENDS, this will be
        # a separate install.
        # Now see the Uploads section for the stuff you need to
        # upload your wheels after CI has built them.

# You will likely prefer "language: generic" for travis configuration,
# rather than, say "language: python". Multibuild doesn't use
# Travis-provided Python but rather installs and uses its own, where the
# Python version is set from the MB_PYTHON_VERSION variable. You can still
# specify a language here if you need it for some unrelated logic and you
# can't use Multibuild-provided Python or other software present on a
# builder.
language: generic

# For CPython macOS builds only, the minimum supported macOS version and
# architectures of any C extensions in the wheel are set with the variable
# MB_PYTHON_OSX_VER: 10.9 (64-bit only) or 10.6 (64/32-bit dual arch). By
# default this is set to the highest available for the Python version selected
# using MB_PYTHON_VERSION. You should only need to set this explicitly if you
# are building a 10.6 dual-arch build for a CPython version where both a 10.9 and
# 10.6 build are available (for example, 2.7 or 3.7).
# All PyPy macOS builds are 64-bit only.

# Required in Linux to invoke `docker` ourselves
services: docker

# Host distribution.  This is the distribution from which we run the build
# and test containers, via docker.
dist: xenial

matrix:
  include:
    # - os: linux
    #   env:
    #     - MB_PYTHON_VERSION=3.6
    #     - PLAT=x86_64
    #     - MB_ML_VER=2010
    # - os: linux
    #   env:
    #     - MB_PYTHON_VERSION=3.6
    #     - PLAT=i686
    #     - MB_ML_VER=2010
    # - os: linux
    #   env:
    #     - MB_PYTHON_VERSION=3.7
    #     - PLAT=x86_64
    #     - MB_ML_VER=2010
    # - os: linux
    #   env:
    #     - MB_PYTHON_VERSION=3.7
    #     - PLAT=i686
    #     - MB_ML_VER=2010
    # - os: linux
    #   env:
    #     - MB_PYTHON_VERSION=3.8
    #     - PLAT=x86_64
    #     - MB_ML_VER=2010
    # - os: linux
    #   env:
    #     - MB_PYTHON_VERSION=3.8
    #     - PLAT=i686
    #     - MB_ML_VER=2010
    # - os: linux
    #   env:
    #     - MB_PYTHON_VERSION=3.9
    #     - PLAT=x86_64
    #     - MB_ML_VER=2010
    # - os: linux
    #   env:
    #     - MB_PYTHON_VERSION=3.9
    #     - PLAT=i686
    #     - MB_ML_VER=2010
    - os: osx
      env:
        - MB_PYTHON_VERSION=3.8
        - VENV=venv

before_install:
    - source multibuild/common_utils.sh
    - source multibuild/travis_steps.sh
    - before_install

install:
    # Maybe get and clean and patch source
    - clean_code $REPO_DIR $BUILD_COMMIT
    - build_wheel $REPO_DIR $PLAT

script:
    - install_run $PLAT

deploy:
  provider: releases
  api_key:
    secure: "lW9Av4tFHr82Pk63vPx8Ce4cEUL3h8pcX/9CMJf/YrZeWh5vCYHLVx73dtAKXoZC5MoYGnKtxLytKe/9HqifSGP9Ryj/Okh0Hl9wDudkyLnkhxDdQrZaXG5/Zk4Hwvfc8bDjEYM1qnmNynt4U6JbouE+1Ti8uQjwTEg/P8jh0nczs4VnnEN8/0VjPBgxQ0McX/p1fNibpkr3Iacyd7E0b6R+rHNj3eH0jtQNEiYUwKpnx1tRYcFa7GBn4ddMtHWZVcV/LdnFvk0dqdk9hO1an0ZiJaXLKxFcaUPt7n9+H9VXUUR+q9yKb66cFOGBVBOXLDWJL/4pf78Z7oT++KZF7iQL4TDr+J6Qr2XtQ2jgj1ewbJd11tPDYPv/hH4EiDhzref2THUuNuNFv4EdyST+jlvue2n2F6UoVZgWOncrVkAXVtp/JHkqV339X5mg36YEdx4a5vLE+3UMISxTvNkgOv+YMsxdOv/lXhOuxvF0s+PrcfMvKJY67Rk8lC9SRd4c2fPwanITDxaEBJY9QqCqYGoM+iVAwHP5GbgJLd0S2nDA8pK57bevnPWbTMVUUfTkT0PfGwBuh6bkNzvKmh+sE7lBG11XBjfhRarCnVgtLbaQxRX3pY2sgYGDl8y/I0Bh0xzX3Abd/eaon2T1PEgVF2Q+hJiPspN/09urmuc2gEM="
  file_glob: true
  file: "${TRAVIS_BUILD_DIR}/${WHEEL_SDIR}/*.whl"
  skip_cleanup: true
  on:
    repo: udon2/udon2-wheels
    tags: true

